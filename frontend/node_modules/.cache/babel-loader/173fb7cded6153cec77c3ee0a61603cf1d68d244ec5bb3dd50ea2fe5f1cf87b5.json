{"ast":null,"code":"import privateProps from './privateProps.js';\nimport { clickConfirm } from './staticMethods/dom.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport * as dom from './utils/dom/index.js';\nimport { callIfFunction } from './utils/utils.js';\n\n/**\n * @param {GlobalState} globalState\n */\nexport const removeKeydownHandler = globalState => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n};\n\n/**\n * @param {SweetAlert} instance\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState);\n  if (!innerParams.toast) {\n    globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup();\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = true;\n  }\n};\n\n/**\n * @param {number} index\n * @param {number} increment\n */\nexport const setFocus = (index, increment) => {\n  const focusableElements = dom.getFocusableElements();\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment;\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0;\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1;\n    }\n    focusableElements[index].focus();\n    return;\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup().focus();\n};\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n/**\n * @param {SweetAlert} instance\n * @param {KeyboardEvent} event\n * @param {Function} dismissWith\n */\nconst keydownHandler = (instance, event, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n  if (!innerParams) {\n    return; // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (event.isComposing || event.keyCode === 229) {\n    return;\n  }\n  if (innerParams.stopKeydownPropagation) {\n    event.stopPropagation();\n  }\n\n  // ENTER\n  if (event.key === 'Enter') {\n    handleEnter(instance, event, innerParams);\n  }\n\n  // TAB\n  else if (event.key === 'Tab') {\n    handleTab(event);\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n    handleArrows(event.key);\n  }\n\n  // ESC\n  else if (event.key === 'Escape') {\n    handleEsc(event, innerParams, dismissWith);\n  }\n};\n\n/**\n * @param {SweetAlert} instance\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n */\nconst handleEnter = (instance, event, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return;\n  }\n  if (event.target && instance.getInput() && event.target instanceof HTMLElement && event.target.outerHTML === instance.getInput().outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return; // do not submit\n    }\n\n    clickConfirm();\n    event.preventDefault();\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n */\nconst handleTab = event => {\n  const targetElement = event.target;\n  const focusableElements = dom.getFocusableElements();\n  let btnIndex = -1;\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  // Cycle to the next button\n  if (!event.shiftKey) {\n    setFocus(btnIndex, 1);\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(btnIndex, -1);\n  }\n  event.stopPropagation();\n  event.preventDefault();\n};\n\n/**\n * @param {string} key\n */\nconst handleArrows = key => {\n  const confirmButton = dom.getConfirmButton();\n  const denyButton = dom.getDenyButton();\n  const cancelButton = dom.getCancelButton();\n  /** @type HTMLElement[] */\n  const buttons = [confirmButton, denyButton, cancelButton];\n  if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n    return;\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n  let buttonToFocus = document.activeElement;\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling];\n    if (!buttonToFocus) {\n      return;\n    }\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break;\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus();\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n * @param {Function} dismissWith\n */\nconst handleEsc = (event, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    event.preventDefault();\n    dismissWith(DismissReason.esc);\n  }\n};","map":{"version":3,"names":["privateProps","clickConfirm","DismissReason","dom","callIfFunction","removeKeydownHandler","globalState","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","instance","innerParams","dismissWith","toast","e","window","getPopup","addEventListener","setFocus","index","increment","focusableElements","getFocusableElements","length","focus","arrowKeysNextButton","arrowKeysPreviousButton","event","get","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","includes","handleArrows","handleEsc","allowEnterKey","target","getInput","HTMLElement","outerHTML","input","preventDefault","targetElement","btnIndex","i","shiftKey","confirmButton","getConfirmButton","denyButton","getDenyButton","cancelButton","getCancelButton","buttons","document","activeElement","sibling","buttonToFocus","getActions","children","HTMLButtonElement","isVisible","allowEscapeKey","esc"],"sources":["C:/Users/LENOVO/Desktop/react project/Contact-form-email/frontend/node_modules/sweetalert2/src/keydown-handler.js"],"sourcesContent":["import privateProps from './privateProps.js'\nimport { clickConfirm } from './staticMethods/dom.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport * as dom from './utils/dom/index.js'\nimport { callIfFunction } from './utils/utils.js'\n\n/**\n * @param {GlobalState} globalState\n */\nexport const removeKeydownHandler = (globalState) => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = false\n  }\n}\n\n/**\n * @param {SweetAlert} instance\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState)\n  if (!innerParams.toast) {\n    globalState.keydownHandler = (e) => keydownHandler(instance, e, dismissWith)\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup()\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = true\n  }\n}\n\n/**\n * @param {number} index\n * @param {number} increment\n */\nexport const setFocus = (index, increment) => {\n  const focusableElements = dom.getFocusableElements()\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1\n    }\n\n    focusableElements[index].focus()\n    return\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup().focus()\n}\n\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown']\n\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp']\n\n/**\n * @param {SweetAlert} instance\n * @param {KeyboardEvent} event\n * @param {Function} dismissWith\n */\nconst keydownHandler = (instance, event, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n\n  if (!innerParams) {\n    return // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (event.isComposing || event.keyCode === 229) {\n    return\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    event.stopPropagation()\n  }\n\n  // ENTER\n  if (event.key === 'Enter') {\n    handleEnter(instance, event, innerParams)\n  }\n\n  // TAB\n  else if (event.key === 'Tab') {\n    handleTab(event)\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n    handleArrows(event.key)\n  }\n\n  // ESC\n  else if (event.key === 'Escape') {\n    handleEsc(event, innerParams, dismissWith)\n  }\n}\n\n/**\n * @param {SweetAlert} instance\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n */\nconst handleEnter = (instance, event, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return\n  }\n\n  if (\n    event.target &&\n    instance.getInput() &&\n    event.target instanceof HTMLElement &&\n    event.target.outerHTML === instance.getInput().outerHTML\n  ) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return // do not submit\n    }\n\n    clickConfirm()\n    event.preventDefault()\n  }\n}\n\n/**\n * @param {KeyboardEvent} event\n */\nconst handleTab = (event) => {\n  const targetElement = event.target\n\n  const focusableElements = dom.getFocusableElements()\n  let btnIndex = -1\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i\n      break\n    }\n  }\n\n  // Cycle to the next button\n  if (!event.shiftKey) {\n    setFocus(btnIndex, 1)\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(btnIndex, -1)\n  }\n\n  event.stopPropagation()\n  event.preventDefault()\n}\n\n/**\n * @param {string} key\n */\nconst handleArrows = (key) => {\n  const confirmButton = dom.getConfirmButton()\n  const denyButton = dom.getDenyButton()\n  const cancelButton = dom.getCancelButton()\n  /** @type HTMLElement[] */\n  const buttons = [confirmButton, denyButton, cancelButton]\n  if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n    return\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling'\n  let buttonToFocus = document.activeElement\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling]\n    if (!buttonToFocus) {\n      return\n    }\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus()\n  }\n}\n\n/**\n * @param {KeyboardEvent} event\n * @param {SweetAlertOptions} innerParams\n * @param {Function} dismissWith\n */\nconst handleEsc = (event, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    event.preventDefault()\n    dismissWith(DismissReason.esc)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}