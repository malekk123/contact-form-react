{"ast":null,"code":"/* istanbul ignore file */\nimport { swalClasses } from '../utils/classes.js';\nimport * as dom from './dom/index.js';\n\n// @ts-ignore\nexport const isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent; // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394\n\n// Fix iOS scrolling http://stackoverflow.com/q/39626302\n\nexport const iOSfix = () => {\n  if (isSafariOrIOS && !dom.hasClass(document.body, swalClasses.iosfix)) {\n    const offset = document.body.scrollTop;\n    document.body.style.top = `${offset * -1}px`;\n    dom.addClass(document.body, swalClasses.iosfix);\n    lockBodyScroll();\n  }\n};\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1246\n */\nconst lockBodyScroll = () => {\n  const container = dom.getContainer();\n  let preventTouchMove;\n  /**\n   * @param {TouchEvent} event\n   */\n  container.ontouchstart = event => {\n    preventTouchMove = shouldPreventTouchMove(event);\n  };\n  /**\n   * @param {TouchEvent} event\n   */\n  container.ontouchmove = event => {\n    if (preventTouchMove) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n};\n\n/**\n * @param {TouchEvent} event\n * @returns {boolean}\n */\nconst shouldPreventTouchMove = event => {\n  const target = event.target;\n  const container = dom.getContainer();\n  if (isStylus(event) || isZoom(event)) {\n    return false;\n  }\n  if (target === container) {\n    return true;\n  }\n  if (!dom.isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n  // #1603\n  target.tagName !== 'TEXTAREA' &&\n  // #2266\n  !(dom.isScrollable(dom.getHtmlContainer()) &&\n  // #1944\n  dom.getHtmlContainer().contains(target))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1786\n *\n * @param {*} event\n * @returns {boolean}\n */\nconst isStylus = event => {\n  return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n};\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1891\n *\n * @param {TouchEvent} event\n * @returns {boolean}\n */\nconst isZoom = event => {\n  return event.touches && event.touches.length > 1;\n};\nexport const undoIOSfix = () => {\n  if (dom.hasClass(document.body, swalClasses.iosfix)) {\n    const offset = parseInt(document.body.style.top, 10);\n    dom.removeClass(document.body, swalClasses.iosfix);\n    document.body.style.top = '';\n    document.body.scrollTop = offset * -1;\n  }\n};","map":{"version":3,"names":["swalClasses","dom","isSafariOrIOS","window","GestureEvent","iOSfix","hasClass","document","body","iosfix","offset","scrollTop","style","top","addClass","lockBodyScroll","container","getContainer","preventTouchMove","ontouchstart","event","shouldPreventTouchMove","ontouchmove","preventDefault","stopPropagation","target","isStylus","isZoom","isScrollable","HTMLElement","tagName","getHtmlContainer","contains","touches","length","touchType","undoIOSfix","parseInt","removeClass"],"sources":["C:/Users/LENOVO/Desktop/react project/Contact-form-email/frontend/node_modules/sweetalert2/src/utils/iosFix.js"],"sourcesContent":["/* istanbul ignore file */\nimport { swalClasses } from '../utils/classes.js'\nimport * as dom from './dom/index.js'\n\n// @ts-ignore\nexport const isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394\n\n// Fix iOS scrolling http://stackoverflow.com/q/39626302\n\nexport const iOSfix = () => {\n  if (isSafariOrIOS && !dom.hasClass(document.body, swalClasses.iosfix)) {\n    const offset = document.body.scrollTop\n    document.body.style.top = `${offset * -1}px`\n    dom.addClass(document.body, swalClasses.iosfix)\n    lockBodyScroll()\n  }\n}\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1246\n */\nconst lockBodyScroll = () => {\n  const container = dom.getContainer()\n  let preventTouchMove\n  /**\n   * @param {TouchEvent} event\n   */\n  container.ontouchstart = (event) => {\n    preventTouchMove = shouldPreventTouchMove(event)\n  }\n  /**\n   * @param {TouchEvent} event\n   */\n  container.ontouchmove = (event) => {\n    if (preventTouchMove) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n}\n\n/**\n * @param {TouchEvent} event\n * @returns {boolean}\n */\nconst shouldPreventTouchMove = (event) => {\n  const target = event.target\n  const container = dom.getContainer()\n  if (isStylus(event) || isZoom(event)) {\n    return false\n  }\n  if (target === container) {\n    return true\n  }\n  if (\n    !dom.isScrollable(container) &&\n    target instanceof HTMLElement &&\n    target.tagName !== 'INPUT' && // #1603\n    target.tagName !== 'TEXTAREA' && // #2266\n    !(\n      dom.isScrollable(dom.getHtmlContainer()) && // #1944\n      dom.getHtmlContainer().contains(target)\n    )\n  ) {\n    return true\n  }\n  return false\n}\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1786\n *\n * @param {*} event\n * @returns {boolean}\n */\nconst isStylus = (event) => {\n  return event.touches && event.touches.length && event.touches[0].touchType === 'stylus'\n}\n\n/**\n * https://github.com/sweetalert2/sweetalert2/issues/1891\n *\n * @param {TouchEvent} event\n * @returns {boolean}\n */\nconst isZoom = (event) => {\n  return event.touches && event.touches.length > 1\n}\n\nexport const undoIOSfix = () => {\n  if (dom.hasClass(document.body, swalClasses.iosfix)) {\n    const offset = parseInt(document.body.style.top, 10)\n    dom.removeClass(document.body, swalClasses.iosfix)\n    document.body.style.top = ''\n    document.body.scrollTop = offset * -1\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}