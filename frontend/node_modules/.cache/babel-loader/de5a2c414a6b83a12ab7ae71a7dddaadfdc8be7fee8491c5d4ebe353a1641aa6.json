{"ast":null,"code":"import { setInnerHtml } from './domUtils.js';\n\n/**\n * @param {HTMLElement | object | string} param\n * @param {HTMLElement} target\n */\nexport const parseHtmlToContainer = (param, target) => {\n  // DOM element\n  if (param instanceof HTMLElement) {\n    target.appendChild(param);\n  }\n\n  // Object\n  else if (typeof param === 'object') {\n    handleObject(param, target);\n  }\n\n  // Plain string\n  else if (param) {\n    setInnerHtml(target, param);\n  }\n};\n\n/**\n * @param {any} param\n * @param {HTMLElement} target\n */\nconst handleObject = (param, target) => {\n  // JQuery element(s)\n  if (param.jquery) {\n    handleJqueryElem(target, param);\n  }\n\n  // For other objects use their string representation\n  else {\n    setInnerHtml(target, param.toString());\n  }\n};\n\n/**\n * @param {HTMLElement} target\n * @param {any} elem\n */\nconst handleJqueryElem = (target, elem) => {\n  target.textContent = '';\n  if (0 in elem) {\n    for (let i = 0; (i in elem); i++) {\n      target.appendChild(elem[i].cloneNode(true));\n    }\n  } else {\n    target.appendChild(elem.cloneNode(true));\n  }\n};","map":{"version":3,"names":["setInnerHtml","parseHtmlToContainer","param","target","HTMLElement","appendChild","handleObject","jquery","handleJqueryElem","toString","elem","textContent","i","cloneNode"],"sources":["C:/Users/LENOVO/Desktop/react project/Contact-form-email/frontend/node_modules/sweetalert2/src/utils/dom/parseHtmlToContainer.js"],"sourcesContent":["import { setInnerHtml } from './domUtils.js'\n\n/**\n * @param {HTMLElement | object | string} param\n * @param {HTMLElement} target\n */\nexport const parseHtmlToContainer = (param, target) => {\n  // DOM element\n  if (param instanceof HTMLElement) {\n    target.appendChild(param)\n  }\n\n  // Object\n  else if (typeof param === 'object') {\n    handleObject(param, target)\n  }\n\n  // Plain string\n  else if (param) {\n    setInnerHtml(target, param)\n  }\n}\n\n/**\n * @param {any} param\n * @param {HTMLElement} target\n */\nconst handleObject = (param, target) => {\n  // JQuery element(s)\n  if (param.jquery) {\n    handleJqueryElem(target, param)\n  }\n\n  // For other objects use their string representation\n  else {\n    setInnerHtml(target, param.toString())\n  }\n}\n\n/**\n * @param {HTMLElement} target\n * @param {any} elem\n */\nconst handleJqueryElem = (target, elem) => {\n  target.textContent = ''\n  if (0 in elem) {\n    for (let i = 0; i in elem; i++) {\n      target.appendChild(elem[i].cloneNode(true))\n    }\n  } else {\n    target.appendChild(elem.cloneNode(true))\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;;AAE5C;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrD;EACA,IAAID,KAAK,YAAYE,WAAW,EAAE;IAChCD,MAAM,CAACE,WAAW,CAACH,KAAK,CAAC;EAC3B;;EAEA;EAAA,KACK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAClCI,YAAY,CAACJ,KAAK,EAAEC,MAAM,CAAC;EAC7B;;EAEA;EAAA,KACK,IAAID,KAAK,EAAE;IACdF,YAAY,CAACG,MAAM,EAAED,KAAK,CAAC;EAC7B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMI,YAAY,GAAGA,CAACJ,KAAK,EAAEC,MAAM,KAAK;EACtC;EACA,IAAID,KAAK,CAACK,MAAM,EAAE;IAChBC,gBAAgB,CAACL,MAAM,EAAED,KAAK,CAAC;EACjC;;EAEA;EAAA,KACK;IACHF,YAAY,CAACG,MAAM,EAAED,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAC;EACxC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMD,gBAAgB,GAAGA,CAACL,MAAM,EAAEO,IAAI,KAAK;EACzCP,MAAM,CAACQ,WAAW,GAAG,EAAE;EACvB,IAAI,CAAC,IAAID,IAAI,EAAE;IACb,KAAK,IAAIE,CAAC,GAAG,CAAC,GAAEA,CAAC,IAAIF,IAAI,GAAEE,CAAC,EAAE,EAAE;MAC9BT,MAAM,CAACE,WAAW,CAACK,IAAI,CAACE,CAAC,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7C;EACF,CAAC,MAAM;IACLV,MAAM,CAACE,WAAW,CAACK,IAAI,CAACG,SAAS,CAAC,IAAI,CAAC,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}