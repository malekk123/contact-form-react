{"ast":null,"code":"import privateProps from './privateProps.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport { callIfFunction } from './utils/utils.js';\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith);\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache);\n\n    // Ignore click events that had mousedown on the container but mouseup on the popup\n    handleContainerMousedown(domCache);\n    handleModalClick(instance, domCache, dismissWith);\n  }\n};\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n      return;\n    }\n    dismissWith(DismissReason.close);\n  };\n};\n\n/**\n * @param {*} innerParams\n * @returns {boolean}\n */\nconst isAnyButtonShown = innerParams => {\n  return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n};\nlet ignoreOutsideClick = false;\nconst handleModalMousedown = domCache => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined;\n      // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\nconst handleContainerMousedown = domCache => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined;\n      // We also need to check if the mouseup target is a child of the popup\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = e => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false;\n      return;\n    }\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop);\n    }\n  };\n};","map":{"version":3,"names":["privateProps","DismissReason","callIfFunction","handlePopupClick","instance","domCache","dismissWith","innerParams","get","toast","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","popup","onclick","isAnyButtonShown","timer","input","close","showConfirmButton","showDenyButton","showCancelButton","showCloseButton","ignoreOutsideClick","onmousedown","container","onmouseup","e","undefined","target","contains","allowOutsideClick","backdrop"],"sources":["C:/Users/LENOVO/Desktop/react project/Contact-form-email/frontend/node_modules/sweetalert2/src/popup-click-handler.js"],"sourcesContent":["import privateProps from './privateProps.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport { callIfFunction } from './utils/utils.js'\n\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith)\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache)\n\n    // Ignore click events that had mousedown on the container but mouseup on the popup\n    handleContainerMousedown(domCache)\n\n    handleModalClick(instance, domCache, dismissWith)\n  }\n}\n\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n      return\n    }\n    dismissWith(DismissReason.close)\n  }\n}\n\n/**\n * @param {*} innerParams\n * @returns {boolean}\n */\nconst isAnyButtonShown = (innerParams) => {\n  return (\n    innerParams.showConfirmButton ||\n    innerParams.showDenyButton ||\n    innerParams.showCancelButton ||\n    innerParams.showCloseButton\n  )\n}\n\nlet ignoreOutsideClick = false\n\nconst handleModalMousedown = (domCache) => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined\n      // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleContainerMousedown = (domCache) => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined\n      // We also need to check if the mouseup target is a child of the popup\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = (e) => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false\n      return\n    }\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}