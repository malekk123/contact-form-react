{"ast":null,"code":"/**\n * Returns an extended version of `Swal` containing `params` as defaults.\n * Useful for reusing Swal configuration.\n *\n * For example:\n *\n * Before:\n * const textPromptOptions = { input: 'text', showCancelButton: true }\n * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n *\n * After:\n * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n * const {value: firstName} = await TextPrompt('What is your first name?')\n * const {value: lastName} = await TextPrompt('What is your last name?')\n *\n * @param {SweetAlertOptions} mixinParams\n * @returns {SweetAlert}\n */\nexport function mixin(mixinParams) {\n  class MixinSwal extends this {\n    _main(params, priorityMixinParams) {\n      return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n    }\n  }\n  // @ts-ignore\n  return MixinSwal;\n}","map":{"version":3,"names":["mixin","mixinParams","MixinSwal","_main","params","priorityMixinParams","Object","assign"],"sources":["C:/Users/LENOVO/Desktop/react project/Contact-form-email/frontend/node_modules/sweetalert2/src/staticMethods/mixin.js"],"sourcesContent":["/**\n * Returns an extended version of `Swal` containing `params` as defaults.\n * Useful for reusing Swal configuration.\n *\n * For example:\n *\n * Before:\n * const textPromptOptions = { input: 'text', showCancelButton: true }\n * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n *\n * After:\n * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n * const {value: firstName} = await TextPrompt('What is your first name?')\n * const {value: lastName} = await TextPrompt('What is your last name?')\n *\n * @param {SweetAlertOptions} mixinParams\n * @returns {SweetAlert}\n */\nexport function mixin(mixinParams) {\n  class MixinSwal extends this {\n    _main(params, priorityMixinParams) {\n      return super._main(params, Object.assign({}, mixinParams, priorityMixinParams))\n    }\n  }\n  // @ts-ignore\n  return MixinSwal\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAKA,CAACC,WAAW,EAAE;EACjC,MAAMC,SAAS,SAAS,IAAI,CAAC;IAC3BC,KAAKA,CAACC,MAAM,EAAEC,mBAAmB,EAAE;MACjC,OAAO,KAAK,CAACF,KAAK,CAACC,MAAM,EAAEE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,WAAW,EAAEI,mBAAmB,CAAC,CAAC;IACjF;EACF;EACA;EACA,OAAOH,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}